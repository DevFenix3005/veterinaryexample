plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.bmuschko.docker-spring-boot-application'
    id 'java'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation platform("org.keycloak.bom:keycloak-adapter-bom:$keycloakVersion")
    implementation 'org.keycloak:keycloak-spring-boot-starter'

    runtimeOnly 'org.postgresql:postgresql'

    implementation "org.mapstruct:mapstruct:$mapstructVerion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVerion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    implementation "org.zalando:problem-spring-web-starter:$problemZalandoVersion"
    implementation "com.google.guava:guava:$guavaVersion"
    implementation "com.vladmihalcea:hibernate-types-55:$vladVersion"
    implementation "org.jetbrains:annotations:$jetbrainsVersion"
    implementation "com.konghq:unirest-java:$unirestVerion"
    implementation "com.konghq:unirest-objectmapper-jackson:$unirestVerion"
    implementation "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"

    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
    testImplementation "org.junit.platform:junit-platform-launcher:$junitPlataformVersion"
    testImplementation "org.junit.platform:junit-platform-suite:$junitPlataformVersion"
    testImplementation "io.cucumber:cucumber-java:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-spring:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-junit:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:$cucumberVersion"

}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    springBootApplication {
        baseImage = 'openjdk:18-alpine'
        ports = [9090, 8080]
        images = ['veterinary-ex/app:1.0', 'veterinary-ex/app:latest']
        jvmArgs = ['-Dspring.profiles.active=production', '-Xmx2048m']
    }
}



